/**
 * This class was generated by Smooks EJC (http://www.smooks.org).
 */
package com.acme.order.model;

import java.io.Serializable;    
import org.milyn.smooks.edi.EDIWritable;    
import org.milyn.javabean.decoders.DoubleDecoder;    
import java.util.Date;    
import org.milyn.javabean.decoders.DateDecoder;    
import org.milyn.javabean.decoders.IntegerDecoder;    
import java.math.BigDecimal;    
import org.milyn.javabean.decoders.BigDecimalDecoder;    
import java.io.Writer;    
import org.milyn.edisax.model.internal.Delimiters;    
import java.io.IOException;    
import java.util.Properties;    

public class TermsOfSale implements Serializable, EDIWritable {

    private static final long serialVersionUID = 1L;

    private String termsTypeCode;
    private String termsBasisDateCode;
    private Double termsDiscountPercent;
    private DoubleDecoder termsDiscountPercentEncoder;
    private Date termsDiscountDueDate;
    private DateDecoder termsDiscountDueDateEncoder;
    private Integer termsDiscountDaysDue;
    private IntegerDecoder termsDiscountDaysDueEncoder;
    private Date termsNetDueDate;
    private DateDecoder termsNetDueDateEncoder;
    private Integer termsNetDays;
    private IntegerDecoder termsNetDaysEncoder;
    private BigDecimal termsDiscountAmount;
    private BigDecimalDecoder termsDiscountAmountEncoder;
    private String description;

    public TermsOfSale() {
        
        termsDiscountPercentEncoder = new DoubleDecoder();
        termsDiscountDueDateEncoder = new DateDecoder();
        Properties termsDiscountDueDateEncoderProperties = new Properties();
        termsDiscountDueDateEncoderProperties.setProperty("format", "yyyyMMdd");
        termsDiscountDueDateEncoder.setConfiguration(termsDiscountDueDateEncoderProperties);
        termsDiscountDaysDueEncoder = new IntegerDecoder();
        termsNetDueDateEncoder = new DateDecoder();
        Properties termsNetDueDateEncoderProperties = new Properties();
        termsNetDueDateEncoderProperties.setProperty("format", "yyyyMMdd");
        termsNetDueDateEncoder.setConfiguration(termsNetDueDateEncoderProperties);
        termsNetDaysEncoder = new IntegerDecoder();
        termsDiscountAmountEncoder = new BigDecimalDecoder();
    }

    public void write(Writer writer, Delimiters delimiters) throws IOException {
        
        Writer nodeWriter = writer;

        if(termsTypeCode != null) {
            nodeWriter.write(delimiters.escape(termsTypeCode.toString()));
        }
        nodeWriter.write(delimiters.getField());
        if(termsBasisDateCode != null) {
            nodeWriter.write(delimiters.escape(termsBasisDateCode.toString()));
        }
        nodeWriter.write(delimiters.getField());
        if(termsDiscountPercent != null) {
            nodeWriter.write(delimiters.escape(termsDiscountPercentEncoder.encode(termsDiscountPercent)));
        }
        nodeWriter.write(delimiters.getField());
        if(termsDiscountDueDate != null) {
            nodeWriter.write(delimiters.escape(termsDiscountDueDateEncoder.encode(termsDiscountDueDate)));
        }
        nodeWriter.write(delimiters.getField());
        if(termsDiscountDaysDue != null) {
            nodeWriter.write(delimiters.escape(termsDiscountDaysDueEncoder.encode(termsDiscountDaysDue)));
        }
        nodeWriter.write(delimiters.getField());
        if(termsNetDueDate != null) {
            nodeWriter.write(delimiters.escape(termsNetDueDateEncoder.encode(termsNetDueDate)));
        }
        nodeWriter.write(delimiters.getField());
        if(termsNetDays != null) {
            nodeWriter.write(delimiters.escape(termsNetDaysEncoder.encode(termsNetDays)));
        }
        nodeWriter.write(delimiters.getField());
        if(termsDiscountAmount != null) {
            nodeWriter.write(delimiters.escape(termsDiscountAmountEncoder.encode(termsDiscountAmount)));
        }
        nodeWriter.write(delimiters.getField());
        if(description != null) {
            nodeWriter.write(delimiters.escape(description.toString()));
        }
        writer.write(delimiters.getSegmentDelimiter());
        writer.flush();
    }

    public String getTermsTypeCode() {
        return termsTypeCode;
    }

    public TermsOfSale setTermsTypeCode(String termsTypeCode) {
        this.termsTypeCode = termsTypeCode;  return this;
    }

    public String getTermsBasisDateCode() {
        return termsBasisDateCode;
    }

    public TermsOfSale setTermsBasisDateCode(String termsBasisDateCode) {
        this.termsBasisDateCode = termsBasisDateCode;  return this;
    }

    public Double getTermsDiscountPercent() {
        return termsDiscountPercent;
    }

    public TermsOfSale setTermsDiscountPercent(Double termsDiscountPercent) {
        this.termsDiscountPercent = termsDiscountPercent;  return this;
    }

    public Date getTermsDiscountDueDate() {
        return termsDiscountDueDate;
    }

    public TermsOfSale setTermsDiscountDueDate(Date termsDiscountDueDate) {
        this.termsDiscountDueDate = termsDiscountDueDate;  return this;
    }

    public Integer getTermsDiscountDaysDue() {
        return termsDiscountDaysDue;
    }

    public TermsOfSale setTermsDiscountDaysDue(Integer termsDiscountDaysDue) {
        this.termsDiscountDaysDue = termsDiscountDaysDue;  return this;
    }

    public Date getTermsNetDueDate() {
        return termsNetDueDate;
    }

    public TermsOfSale setTermsNetDueDate(Date termsNetDueDate) {
        this.termsNetDueDate = termsNetDueDate;  return this;
    }

    public Integer getTermsNetDays() {
        return termsNetDays;
    }

    public TermsOfSale setTermsNetDays(Integer termsNetDays) {
        this.termsNetDays = termsNetDays;  return this;
    }

    public BigDecimal getTermsDiscountAmount() {
        return termsDiscountAmount;
    }

    public TermsOfSale setTermsDiscountAmount(BigDecimal termsDiscountAmount) {
        this.termsDiscountAmount = termsDiscountAmount;  return this;
    }

    public String getDescription() {
        return description;
    }

    public TermsOfSale setDescription(String description) {
        this.description = description;  return this;
    }
}