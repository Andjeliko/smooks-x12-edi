/**
 * This class was generated by Smooks EJC (http://www.smooks.org).
 */
package com.acme.order.model;

import java.io.Serializable;    
import org.milyn.smooks.edi.EDIWritable;    
import java.math.BigInteger;    
import org.milyn.javabean.decoders.BigIntegerDecoder;    
import java.io.Writer;    
import org.milyn.edisax.model.internal.Delimiters;    
import java.io.IOException;    

public class TransactionTotals implements Serializable, EDIWritable {

    private static final long serialVersionUID = 1L;

    private BigInteger numberOfLineItems;
    private BigIntegerDecoder numberOfLineItemsEncoder;

    public TransactionTotals() {
        
        numberOfLineItemsEncoder = new BigIntegerDecoder();
    }

    public void write(Writer writer, Delimiters delimiters) throws IOException {
        
        Writer nodeWriter = writer;

        if(numberOfLineItems != null) {
            nodeWriter.write(delimiters.escape(numberOfLineItemsEncoder.encode(numberOfLineItems)));
        }
        writer.write(delimiters.getSegmentDelimiter());
        writer.flush();
    }

    public BigInteger getNumberOfLineItems() {
        return numberOfLineItems;
    }

    public TransactionTotals setNumberOfLineItems(BigInteger numberOfLineItems) {
        this.numberOfLineItems = numberOfLineItems;  return this;
    }
}